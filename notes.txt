
 

Postgres URL: postgres://xfhjvaaf:kaHfdj5HE54NhHzx8WIV6fv59Zp8_E8V@raja.db.elephantsql.com/xfhjvaaf
Postgres Pass: kaHfdj5HE54NhHzx8WIV6fv59Zp8_E8V
Excalidraw Link: https://excalidraw.com/#room=a09e884320a51966be84,f5codh1sbC1o3cU5RNam0A


Table creation
--------------

CREATE TABLE survey (
  id serial PRIMARY KEY,
  week INTEGER NOT NULL,
  question_0 INTEGER NOT NULL,
  question_1 INTEGER NOT NULL,
  question_2 INTEGER NOT NULL,
  question_3 INTEGER NOT NULL
);

Join Tables to be Mapped
-------------------------



Show tables
-----------

SELECT
    table_schema || '.' || table_name as show_tables
FROM
    information_schema.tables
WHERE
    table_type = 'BASE TABLE'
AND
    table_schema NOT IN ('pg_catalog', 'information_schema');


Show survey table_schema
------------------------
SELECT column_name, data_type, character_maximum_length
FROM INFORMATION_SCHEMA.COLUMNS
WHERE table_name = 'survey';

Add question column
----------------------
ALTER TABLE survey
ADD question_i INTEGER NOT NULL;

- Add 1 more question to the database

question_0
question_1
question_2
question_3

app.get('/chart')


Response structure that we're returning from the database 
[
     {
      question: 0,
      week_1_total: 90,
      week_2_total: 100,
      week_3_total: 50
     },
     {
      question: 1,
      week_1_total: 90,
      week_2_total: 30,
      week_3_total: 40
     },
  ]


const result = [
  {
    question_0_total: '13'
  },
  {
    question_0_total: '13'
  }
]

[ { question_0_total: '13' }, { question_0_total: '13' } ]

const responseArr =
[
  {
    week_id: 1,
    question_0: 35,
    question_1: 50,
    question_2: 40,
    question_3: 25
  },
  {
    week_id: 2,
    question_0: 40,
    question_1: 50,
    question_2: 40,
    question_3: 25
  },
  {
    week_id: 3,
    question_0: 10,
    question_1: 40,
    question_2: 25,
    question_3: 2
  },
]

To gather response for /api/graph:

SELECT * FROM survey WHERE week=1;
--> table of all surveys submit in week one

'SELECT SUM(question_0) as question_0_total AND SUM(question_1) as question_1_total FROM survey GROUP BY week'

Count number of rows in table:
SELECT 
   COUNT(*) 
FROM 
   table_name;